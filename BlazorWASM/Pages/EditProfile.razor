@page "/ViewProfile/EditProfile"
@using HttpClients.ClientInterfaces
@using Domain.Models
@inject IUserService userService;
@inject AuthenticationStateProvider AuthenticationStateProvider

<AuthorizeView>
    <div class="container">
        <h3>Edit Profile</h3>
        <form>
            <div class="field-container">
                <div class="field">
                    <label for="username">Username:</label>
                    <input type="text" id="username" value="@username" readonly />
                </div>
                <div class="field">
                    <label for="userEmail">Email:</label>
                    <input type="email" id="userEmail" @bind="userEmail" />
                </div>
                <div class="field">
                    <label for="userPassword">Password:</label>
                    <input type="password" id="userPassword" @bind="userPassword" />
                </div>
                <div class="button-row">
                    <button type="button" class="updateBTN" @onclick="Update">Update</button>
                </div>
            </div>
        </form>
        @if (!string.IsNullOrEmpty(resultMsg))
        {
            <label style="@color">@resultMsg</label>
        }
    </div>

</AuthorizeView>

@code {
    private string userEmail = "";
    private string userPassword = "";
    private string username = "";
    private string resultMsg = "";
    private string color = "";
    
    private AuthenticationUser _user = new();

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        username = authState.User.Identity?.Name ?? "UnknownUser";
    }

    private async Task Update()
    {
        resultMsg = "";
        try
        {
            await userService.UpdateAsync(username, userEmail, userPassword);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            resultMsg = e.Message;
            color = "red";
        }
    }
    
}