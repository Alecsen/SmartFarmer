@page "/ViewProfile"
@using Domain.Models
@using HttpClients.ClientInterfaces
@inject IUserService userService;
@inject NavigationManager navMgr;

@inject AuthenticationStateProvider AuthenticationStateProvider

@if (currentUsername.Equals(""))
{
    <p>Loading...</p>
}
else
{
    <AuthorizeView>
        <div class="profile-container">
            <h3>Personlige oplysninger</h3>
            <table class="profile-table">
                <tr>
                    <td>Brugernavn</td>
                    <td><div class="field-value">@currentUsername</div></td>
                </tr>
                <tr>
                    <td>Kodeord</td>
                    <td><div class="field-value">********</div></td>
                </tr>
                <tr>
                    <td>Email</td>
                    <td><div class="field-value">@_user.Email</div></td>
                </tr>
                <tr>
                    <td>Navn</td>
                    <td><div class="field-value">@_user.Name</div></td>
                </tr>
                <tr>
                    <td>Role:</td>
                    <td><div class="field-value">@_user.Role</div></td>
                </tr>
            </table>
            <div class="button-row">
                <button @onclick="EditPage" class="edit-btn">Opdater profil</button>
            </div>
            @if (!string.IsNullOrEmpty(resultMsg))
            {
                <div style="@color" class="result-message">@resultMsg</div>
            }
        </div>

    </AuthorizeView>
}


@code {
    private string currentUsername = "";
    private string resultMsg = "";
    private string color = "";

    private AuthenticationUser _user = new();
    private int currentUserId;
    
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        currentUsername = user.Identity?.Name ?? "UnknownUser";

        currentUserId = await userService.GetCurrentUserId();

        _user = await userService.GetAsync(currentUsername);
    }

    private void EditPage()
    {
        navMgr.NavigateTo("/ViewProfile/EditProfile");
    }

}